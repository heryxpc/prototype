0 T70 R76 "TOP-LEVEL:@" -1 -1 !T50 0 T68 (T70 R76 "TOP-LEVEL:@" 1 -1 "/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */




/* This header is separate from features.h so that the compiler can
   include it implicitly at the start of every compilation.  It must
   not itself include <features.h> or any other header that includes
   <features.h> because the implicit include comes before any feature
   test macros that may be defined in a source file before it first
   explicitly includes a system header.  GCC knows the name of this
   header in order to preinclude it.  */

/* glibc's intent is to support the IEC 559 math functionality, real
   and complex.  If the GCC (4.9 and later) predefined macros
   specifying compiler intent are available, use them to determine
   whether the overall intent is to support these features; otherwise,
   presume an older compiler has intent to support these features and
   define these macros by default.  */
/* wchar_t uses ISO/IEC 10646 (2nd ed., published 2011-03-15) /
   Unicode 6.0.  */


/* We do not support C11 <threads.h>.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_assert" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 2 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_assume" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 4 -1 "/* Modified to handle non determinism in PIPS*/
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_nondet_int" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 5 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_nondet_uint" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 6 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_nondet_bool" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 7 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_nondet_char" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 8 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_nondet_uchar" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 212 -1 "/*
 *  generated by CSeq [ 0000 / 0000 ]
 * 
 *                      2C9F merger-0.0-2015.07.09
 *                      FB59 parser-0.0-2015.06.26
 *                      AB0B module-0.0-2015.07.16 ]
 *
 *  2015-08-18 10:33:44
 *
 *  params:
 *    -l out, --backend cpachecker, --unwind 2, --rounds 2, -i ../../../prototype/test7/benchmarks/cseq/28_buggy_simple_loop1_vf_false-unreach-call.c, 
 *
 *  modules:
 *    36D1 workarounds-0.0 ()
 *    5E66 functiontracker-0.0 ()
 *    AE03 preinstrumenter-0.0 (error-label)
 *    8CEB constants-0.0 ()
 *    6EDD spinlock-0.0 ()
 *    9C8E switchconverter-0.0 ()
 *    6A40 dowhileconverter-0.0 ()
 *    B23B conditionextractor-0.0 ()
 *    BB48 varnames-0.0 ()
 *    698C inliner-0.0 ()
 *    1629 unroller-0.0 (unwind)
 *    8667 duplicator-0.0 ()
 *    72E0 condwaitconverter-0.0 ()
 *    454D lazyseq-0.0 (rounds schedule threads deadlock)
 *    2B01 instrumenter-0.0 (backend bitwidth header)
 *
 */
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */





/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */




/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _ISOC11_SOURCE	Extensions to ISO C99 from ISO C11.
   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _BSD_SOURCE		ISO C, POSIX, and 4.3BSD things.
   _SVID_SOURCE		ISO C, POSIX, and SVID things.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _DEFAULT_SOURCE	The default set of features (taking precedence over
			__STRICT_ANSI__).
   _REENTRANT		Select additionally reentrant object.
   _THREAD_SAFE		Same as _REENTRANT, often used by other systems.
   _FORTIFY_SOURCE	If set to numeric value > 0 additional security
			measures are defined, according to level.

   The `-ansi' switch to the GNU C compiler, and standards conformance
   options such as `-std=c99', define __STRICT_ANSI__.  If none of
   these are defined, or if _DEFAULT_SOURCE is defined, the default is
   to have _SVID_SOURCE, _BSD_SOURCE, and _POSIX_SOURCE set to one and
   _POSIX_C_SOURCE set to 200809L.  If more than one of these are
   defined, they accumulate.  For example __STRICT_ANSI__,
   _POSIX_SOURCE and _POSIX_C_SOURCE together give you ISO C, 1003.1,
   and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __USE_ISOC11		Define ISO C11 things.
   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8       Define XPG7 things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_BSD		Define 4.3BSD things.
   __USE_SVID		Define SVID things.
   __USE_MISC		Define things common to BSD and System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_REENTRANT	Define reentrant/thread-safe *_r functions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.  */


/* Undefine everything, so we get a clean slate.  */
/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */




/* Convenience macros to test the versions of glibc and gcc.
   Use them like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note - they won't work for gcc1 or glibc1, since the _MINOR macros
   were not defined then.  */
/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */
/* If nothing (other than _GNU_SOURCE and _DEFAULT_SOURCE) is defined,
   define _DEFAULT_SOURCE, _BSD_SOURCE and _SVID_SOURCE.  */
/* This is to enable the ISO C11 extension.  */





/* This is to enable the ISO C99 extension.  */





/* This is to enable the ISO C90 Amendment 1:1995 extension.  */





/* This is to enable compatibility for ISO C++11.

   So far g++ does not provide a macro.  Check the temporary macro for
   now, too.  */





/* If none of the ANSI/POSIX macros are defined, or if _DEFAULT_SOURCE
   is defined, use POSIX.1-2008 (or another version depending on
   _XOPEN_SOURCE).  */
/* Get definitions of __STDC_* predefined macros, if the compiler has
   not preincluded this header automatically.  */
/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */



/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */






/* This is here only because every header file already includes this one.  */


/* Copyright (C) 1992-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */




/* We are almost always included from features.h. */




/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */




/* Some user header file might have defined this before.  */
/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */



/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */




/* This is not a typedef so `const __ptr_t' does the right thing.  */




/* C++ needs to know that types and declarations are C, not C++.  */
/* The standard library needs the functions from the ISO C90 standard
   in the std namespace.  At the same time we want to be safe for
   future changes and we include the ISO C99 code in the non-standard
   namespace __c99.  The C++ wrapper header take case of adding the
   definitions to the global namespace.  */
/* For compatibility we do not add the declarations into any
   namespace.  They will end up in the global namespace which is what
   old code expects.  */
/* Fortify support.  */
/* Support for flexible arrays.  */
/* __asm__ (\"xyz\") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */
/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */




/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */






/* Tell the compiler which arguments to an allocation function
   indicate the size of the allocation.  */







/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */






/* This declaration tells the compiler that the value is constant.  */






/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */
/* gcc allows marking deprecated functions.  */






/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */






/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */







/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */






/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */
/* Forces a function to be always inlined.  */






/* Associate error messages with the source location of the call site rather
   than with the source location inside the function.  */
/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */





/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */




/* __restrict is known in EGCS 1.2 and above. */




/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */
/* Determine the wordsize from the preprocessor defines.  */
/* Both x86-64 and x32 use the 64-bit system call interface.  */


/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */







/* Decide whether we can define 'extern inline' functions in headers.  */







/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */
/* This file is automatically generated.
   This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */






/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */





/* Copyright (C) 1989-2013 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */






/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */
/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */




/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_.
   NetBSD defines _I386_ANSI_H_ and _X86_64_ANSI_H_ instead of _ANSI_H_ */
/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */




/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */
/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$size_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 30 -1 "/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */
/*  NetBSD 5 requires the I386_ANSI_H and X86_64_ANSI_H checks here.  */
/* A null pointer constant.  */

/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */




/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */
/* Determine the wordsize from the preprocessor defines.  */
/* Both x86-64 and x32 use the 64-bit system call interface.  */

/* Convenience types.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_char" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 31 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_short" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 32 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_int" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 33 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_long" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 36 -1 "
/* Fixed-size types, underlying types depend on word size and compiler.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int8_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 37 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint8_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 38 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int16_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 39 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint16_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 40 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int32_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 41 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint32_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 43 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 44 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 52 -1 "




/* quad_t is also 64 bits.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__quad_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 53 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_quad_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 124 -1 "





/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- \"natural\" 16-bit type (always short)
	32		-- \"natural\" 32-bit type (always int)
	64		-- \"natural\" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */
/* No need to mark the typedef with __extension__.   */




/* bits/typesizes.h -- underlying types for *_t.  Linux/x86-64 version.
   Copyright (C) 2012-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */
/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */

/* X32 kernel interface is 64-bit.  */
/* Tell the libc code that off_t and off64_t are actually the same type
   for all ABI purposes, even if possibly expressed as different base types
   for C type-checking purposes.  */


/* Same for ino_t and ino64_t.  */



/* Number of descriptors that can fit in an `fd_set'.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__dev_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 125 -1 "/* Type of device numbers.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uid_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 126 -1 "/* Type of user identifications.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__gid_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 127 -1 "/* Type of group identifications.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ino_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 128 -1 "/* Type of file serial numbers.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ino64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 129 -1 "/* Type of file serial numbers (LFS).*/
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__mode_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 130 -1 "/* Type of file attribute bitmasks.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__nlink_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 131 -1 "/* Type of file link counts.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__off_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 132 -1 "/* Type of file sizes and offsets.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__off64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 133 -1 "/* Type of file sizes and offsets (LFS).  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__pid_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 134 -1 "/* Type of process identifications.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_1" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsid_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 135 -1 "/* Type of file system IDs.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__clock_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 136 -1 "/* Type of CPU usage counts.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__rlim_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 137 -1 "/* Type for resource measurement.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__rlim64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 138 -1 "/* Type for resource measurement (LFS).  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__id_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 139 -1 "/* General type for IDs.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__time_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 140 -1 "/* Seconds since the Epoch.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__useconds_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 141 -1 "/* Count of microseconds.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__suseconds_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 143 -1 "/* Signed count of microseconds.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__daddr_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 144 -1 "/* The type of a disk address.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__key_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 147 -1 "/* Type of an IPC key.  */

/* Clock ID used in clock and timer functions.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__clockid_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 150 -1 "
/* Timer ID returned by `timer_create'.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__timer_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 153 -1 "
/* Type to represent block size.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blksize_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 158 -1 "
/* Types from the Large File Support interface.  */

/* Type to count number of disk blocks.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blkcnt_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 159 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blkcnt64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 162 -1 "
/* Type to count file system blocks.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsblkcnt_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 163 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsblkcnt64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 166 -1 "
/* Type to count file system nodes.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsfilcnt_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 167 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsfilcnt64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 170 -1 "
/* Type of miscellaneous file system fields.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsword_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 172 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ssize_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 175 -1 "/* Type of a byte count, or error.  */

/* Signed long type used in system calls.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__syscall_slong_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 177 -1 "/* Unsigned long type used in system calls.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__syscall_ulong_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 181 -1 "
/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__loff_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 182 -1 "/* Type of file sizes and offsets (LFS).  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__qaddr_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 183 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__caddr_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 186 -1 "
/* Duplicates info from stdint.h but this is used in unistd.h.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__intptr_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 189 -1 "
/* Duplicate info from sys/socket.h.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__socklen_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 48 -1 "






/* Define outside of namespace so the C++ is happy.  */



/* The opaque type of streams.  This is the definition used elsewhere.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$FILE" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 64 -1 "




/* The opaque type of streams.  This is the definition used elsewhere.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__FILE" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 94 -1 "/* Value so far.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:'_PIPS_UNION_3" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_2" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__mbstate_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 25 -1 "



/* The rest of the file is only used if used if __need_mbstate_t is not
   defined.  */
/* Undefine all __need_* constants in case we are included to get those
   constants but the whole file was already read.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_4" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_G_fpos_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 30 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_5" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_G_fpos64_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 40 -1 "/* These library features are always available in the GNU C library.  */







/* This is defined by <bits/stat.h> if `st_blksize' exists.  */
/* ALL of these should be defined in _G_config.h */
/* This define avoids name pollution if we're using GNU stdarg.h */

/* Copyright (C) 1989-2013 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */
/* Define __gnuc_va_list.  */



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__gnuc_va_list" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 154 -1 "

/* Define the standard macros for the user,
   if this invocation was from the user program.  */
/* Magic numbers and bits for the _flags field.
   The magic numbers use the high-order bits of _flags;
   the remaining bits are available for variable flags.
   Note: The magic numbers must all be negative if stdio
   emulation is desired. */
/* These are \"formatting flags\" matching the iostream fmtflags enum values. */


/* Handle lock.  */







"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_IO_lock_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 177 -1 "


/* A streammarker remembers a position in a buffer. */




/* If _pos >= 0
 it points to _buf->Gbase()+_pos. FIXME comment */
/* if _pos < 0, it points to _buf->eBptr()+_pos. FIXME comment */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_IO_marker" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 186 -1 "
/* This is the structure from the libstdc++ codecvt class.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:?__codecvt_result" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 312 -1 "
/* High-order word is _IO_MAGIC; rest is flags. */


/* The following pointers correspond to the C++ streambuf protocol. */
/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */
/* Current read pointer */
/* End of get area. */
/* Start of putback+get area. */
/* Start of put area. */
/* Current put pointer. */
/* End of put area. */
/* Start of reserve area. */
/* End of reserve area. */
/* The following fields are used to support backing up and undo. */
/* Pointer to start of non-current get area. */
/* Pointer to first valid character of backup area */
/* Pointer to end of non-current get area. */











/* This used to be _offset but it's too small.  */


/* 1+column number of pbase(); 0 is unknown. */




/*  char* _save_gptr;  char* _save_egptr; */










/* Make sure we don't get into trouble again.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_IO_FILE" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 315 -1 "

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_IO_FILE" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 320 -1 "



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_2_1_stdin_" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 321 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_2_1_stdout_" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 322 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_2_1_stderr_" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 338 -1 "/* Functions to do I/O and file management for a stream.  */

/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.
   Return number of bytes read.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_read_fn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 347 -1 "
/* Write N bytes pointed to by BUF to COOKIE.  Write all N bytes
   unless there is an error.  Return number of bytes written.  If
   there is an error, return 0 and do not write anything.  If the file
   has been opened for append (__mode.__append set), then set the file
   pointer to the end of the file and then do the write; if not, just
   write at the current file pointer.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_write_fn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 355 -1 "
/* Move COOKIE's file position to *POS bytes from the
   beginning of the file (if W is SEEK_SET),
   the current position (if W is SEEK_CUR),
   or the end of the file (if W is SEEK_END).
   Set *POS to the new file position.
   Returns zero if successful, nonzero if not.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_seek_fn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 358 -1 "
/* Close COOKIE.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_close_fn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 390 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__underflow" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 391 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__uflow" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 392 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__overflow" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 434 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_getc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 435 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_putc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 436 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_feof" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 437 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_ferror" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 439 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_peekc_locked" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 445 -1 "
/* This one is for Emacs. */



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_flockfile" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 446 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_funlockfile" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 447 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_ftrylockfile" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 465 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_vfscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 467 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_vfprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 468 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_padn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 469 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_sgetn" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 471 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_seekoff" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 472 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_seekpos" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 474 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_IO_free_backup_area" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 110 -1 "/* The type of the second argument to `fgetpos' and `fsetpos'.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$fpos_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 168 -1 "







/* The possibilities for the third argument to `setvbuf'.  */





/* Default buffer size.  */





/* End of file character.
   Some things throughout the library rely on this being -1.  */





/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */
/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */
/* Copyright (C) 1994-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */


/* Standard streams.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:stdin" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 169 -1 "/* Standard input stream.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:stdout" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 170 -1 "/* Standard output stream.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:stderr" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 178 -1 "/* Standard error output stream.  */
/* C89/C99 say they're macros.  Make them happy.  */





/* Remove file FILENAME.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:remove" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 180 -1 "/* Rename file OLD to NEW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:rename" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 195 -1 "








/* Create a temporary file and open it read/write.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:tmpfile" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 209 -1 "/* Generate a temporary filename.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:tmpnam" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 237 -1 "

/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fclose" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 242 -1 "/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fflush" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 273 -1 "


/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fopen" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 280 -1 "/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:freopen" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 332 -1 "

/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:setbuf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 337 -1 "/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:setvbuf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 357 -1 "

/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 362 -1 "/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:printf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 365 -1 "/* Write formatted output to S.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:sprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 372 -1 "
/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vfprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 377 -1 "/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 380 -1 "/* Write formatted output to S from argument list ARG.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vsprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 388 -1 "



/* Maximum chars of output to write in MAXLEN.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:snprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 392 -1 "


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vsnprintf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 426 -1 "

/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 431 -1 "/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:scanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 434 -1 "/* Read formatted input from S.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:sscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 453 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_fscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 454 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_scanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 456 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_sscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 473 -1 "









/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vfscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 480 -1 "
/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 485 -1 "
/* Read formatted input from S into argument list ARG.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:vsscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 510 -1 "

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_vfscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 512 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_vscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 515 -1 "

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__isoc99_vsscanf" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 531 -1 "










/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fgetc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 532 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:getc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 538 -1 "
/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:getchar" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 573 -1 "

/* The C standard explicitly says this is a macro, so we always do the
   optimization for it.  */

/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fputc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 574 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:putc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 580 -1 "
/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:putchar" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 623 -1 "

/* The C standard explicitly says this can be a macro,
   so we always do the optimization for it.  */

/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fgets" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 638 -1 "


/* Get a newline-terminated string from stdin, removing the newline.
   DO NOT USE THIS FUNCTION!!  There is no limit on how much it will read.

   The function has been officially removed in ISO C11.  This opportunity
   is used to also remove it from the GNU feature list.  It is now only
   available when explicitly using an old ISO C, Unix, or POSIX standard.
   GCC defines _GNU_SOURCE when building C++ code and the function is still
   in C++11, so it is also available for C++.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:gets" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 689 -1 "


/* Write a string to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fputs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 695 -1 "
/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:puts" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 702 -1 "

/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:ungetc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 710 -1 "

/* Read chunks of generic data from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fread" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 716 -1 "/* Write chunks of generic data to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fwrite" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 749 -1 "

/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fseek" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 754 -1 "/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:ftell" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 759 -1 "/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:rewind" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 798 -1 "

/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */


/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fgetpos" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 803 -1 "/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:fsetpos" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 826 -1 "

/* Clear the error and EOF indicators for STREAM.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:clearerr" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 828 -1 "/* Return the EOF indicator for STREAM.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:feof" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 830 -1 "/* Return the error indicator for STREAM.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:ferror" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 846 -1 "

/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:perror" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 324 -1 "

/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */
/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.
   Copyright (C) 2002-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */





/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */
/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */

/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */



/* Copyright (C) 1991-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/* Get size_t, wchar_t and NULL from <stddef.h>.  */





/* Copyright (C) 1989-2013 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */






/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */
/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */




/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_.
   NetBSD defines _I386_ANSI_H_ and _X86_64_ANSI_H_ instead of _ANSI_H_ */
/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */




/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */
/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */
/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, \"Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type.\" */
/* FreeBSD 5 can't be handled well using \"traditional\" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$wchar_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 101 -1 "/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */
/*  NetBSD 5 requires the I386_ANSI_H and X86_64_ANSI_H checks here.  */
/* A null pointer constant.  */



/* Returned by `div'.  */


/* Quotient.  */
/* Remainder.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_6" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$div_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 109 -1 "
/* Returned by `ldiv'.  */



/* Quotient.  */
/* Remainder.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_7" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$ldiv_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 121 -1 "





/* Returned by `lldiv'.  */


/* Quotient.  */
/* Remainder.  */"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_8" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$lldiv_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 139 -1 "




/* The largest number rand will return (same as INT_MAX).  */



/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */




/* Maximum length of a multibyte character in the current locale.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__ctype_get_mb_cur_max" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 145 -1 "


/* Convert a string to a floating-point number.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:atof" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 148 -1 "/* Convert a string to an integer.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:atoi" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 151 -1 "/* Convert a string to a long integer.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:atol" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 158 -1 "



/* Convert a string to a long long integer.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:atoll" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 166 -1 "



/* Convert a string to a floating-point number.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtod" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 173 -1 "



/* Likewise for `float' and `long double' sizes of floating-point numbers.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtof" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 177 -1 "


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtold" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 185 -1 "



/* Convert a string to a long integer.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtol" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 189 -1 "/* Convert a string to an unsigned long integer.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtoul" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 211 -1 "

/* Convert a string to a quadword integer.  */



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtoll" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 216 -1 "/* Convert a string to an unsigned quadword integer.  */



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:strtoull" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 374 -1 "

/* Return a random integer between 0 and RAND_MAX inclusive.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:rand" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 376 -1 "/* Seed the random number generator with the given number.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:srand" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 466 -1 "

/* Allocate SIZE bytes of memory.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:malloc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 469 -1 "/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:calloc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 481 -1 "




/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:realloc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 483 -1 "/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:free" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 515 -1 "

/* Abort execution and generate a core-dump.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:abort" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 519 -1 "

/* Register a function to be called when `exit' is called.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:atexit" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 543 -1 "

/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:exit" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 557 -1 "










/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:_Exit" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 564 -1 "




/* Return the value of envariable NAME, or NULL if it doesn't exist.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:getenv" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 717 -1 "

/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:system" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 742 -1 "
/* Shorthand for type of comparison functions.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__compar_fn_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 757 -1 "
/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:bsearch" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 766 -1 "




/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:qsort" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 775 -1 "






/* Return the absolute value of X.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:abs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 776 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:labs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 781 -1 "



"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:llabs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 790 -1 "



/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */
/* GCC may have built-ins for these someday.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:div" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 792 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:ldiv" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 799 -1 "





"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:lldiv" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 863 -1 "

/* Return the length of the multibyte character
   in S, which is no longer than N.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:mblen" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 867 -1 "/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:mbtowc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 870 -1 "/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:wctomb" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 875 -1 "

/* Convert a multibyte string to a wide char string.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:mbstowcs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 879 -1 "/* Convert a wide char string to multibyte string.  */


"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:wcstombs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 49 -1 "
/* X/Open pseudo terminal handling.  */
/* Floating-point inline functions for stdlib.h.
   Copyright (C) 2012-2014 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

/* Define some macros helping to catch buffer overflows.  */

"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_active_thread" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 50 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_pc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 51 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_pc_cs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 52 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_thread_index" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 53 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_thread_lines" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 55 -1 "
"T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_safe_malloc" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 56 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_init_scalar" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 57 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__CSEQ_message" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 58 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 59 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_threadargs" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 60 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_create" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 61 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_join" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 62 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_exit" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 63 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_mutex_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 64 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_mutex_init" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 65 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_mutex_destroy" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 66 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_mutex_lock" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 67 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_mutex_unlock" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 68 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_cond_t" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 69 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_cond_init" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 70 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_cond_wait_1" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 71 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_cond_wait_2" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 72 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__cs_cond_signal" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 73 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:__VERIFIER_error" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 74 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:thr1_0" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 75 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:thr1_1" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 76 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:main_thread" )_T46 ())T74 0 U))T70 R76 "TOP-LEVEL:@" 77 -1 ""T50 5 T33 R76 "TOP-LEVEL:CONTINUE" ()))(R76 "TOP-LEVEL:main" )_T46 ())T74 0 U)))))(R76 "TOP-LEVEL:__VERIFIER_assert" R76 "TOP-LEVEL:__VERIFIER_assume" R76 "TOP-LEVEL:__VERIFIER_nondet_int" R76 "TOP-LEVEL:__VERIFIER_nondet_uint" R76 "TOP-LEVEL:__VERIFIER_nondet_bool" R76 "TOP-LEVEL:__VERIFIER_nondet_char" R76 "TOP-LEVEL:__VERIFIER_nondet_uchar" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$size_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_char" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_short" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_int" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_long" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int8_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint8_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int16_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint16_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int32_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint32_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__int64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uint64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__quad_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__u_quad_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__dev_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__uid_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__gid_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ino_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ino64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__mode_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__nlink_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__off_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__off64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__pid_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsid_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_1" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__clock_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__rlim_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__rlim64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__id_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__time_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__useconds_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__suseconds_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__daddr_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__key_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__clockid_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__timer_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blksize_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blkcnt_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__blkcnt64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsblkcnt_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsblkcnt64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsfilcnt_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsfilcnt64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__fsword_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__ssize_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__syscall_slong_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__syscall_ulong_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__loff_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__qaddr_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__caddr_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__intptr_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__socklen_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$FILE" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__FILE" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__mbstate_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_2" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:'_PIPS_UNION_3" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_G_fpos_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_4" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_G_fpos64_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_5" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__gnuc_va_list" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_IO_lock_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_IO_marker" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:?__codecvt_result" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_IO_FILE" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$_IO_FILE" R76 "TOP-LEVEL:_IO_2_1_stdin_" R76 "TOP-LEVEL:_IO_2_1_stdout_" R76 "TOP-LEVEL:_IO_2_1_stderr_" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_read_fn" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_write_fn" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_seek_fn" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__io_close_fn" R76 "TOP-LEVEL:__underflow" R76 "TOP-LEVEL:__uflow" R76 "TOP-LEVEL:__overflow" R76 "TOP-LEVEL:_IO_getc" R76 "TOP-LEVEL:_IO_putc" R76 "TOP-LEVEL:_IO_feof" R76 "TOP-LEVEL:_IO_ferror" R76 "TOP-LEVEL:_IO_peekc_locked" R76 "TOP-LEVEL:_IO_flockfile" R76 "TOP-LEVEL:_IO_funlockfile" R76 "TOP-LEVEL:_IO_ftrylockfile" R76 "TOP-LEVEL:_IO_vfscanf" R76 "TOP-LEVEL:_IO_vfprintf" R76 "TOP-LEVEL:_IO_padn" R76 "TOP-LEVEL:_IO_sgetn" R76 "TOP-LEVEL:_IO_seekoff" R76 "TOP-LEVEL:_IO_seekpos" R76 "TOP-LEVEL:_IO_free_backup_area" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$fpos_t" R76 "TOP-LEVEL:stdin" R76 "TOP-LEVEL:stdout" R76 "TOP-LEVEL:stderr" R76 "TOP-LEVEL:remove" R76 "TOP-LEVEL:rename" R76 "TOP-LEVEL:tmpfile" R76 "TOP-LEVEL:tmpnam" R76 "TOP-LEVEL:fclose" R76 "TOP-LEVEL:fflush" R76 "TOP-LEVEL:fopen" R76 "TOP-LEVEL:freopen" R76 "TOP-LEVEL:setbuf" R76 "TOP-LEVEL:setvbuf" R76 "TOP-LEVEL:fprintf" R76 "TOP-LEVEL:printf" R76 "TOP-LEVEL:sprintf" R76 "TOP-LEVEL:vfprintf" R76 "TOP-LEVEL:vprintf" R76 "TOP-LEVEL:vsprintf" R76 "TOP-LEVEL:snprintf" R76 "TOP-LEVEL:vsnprintf" R76 "TOP-LEVEL:fscanf" R76 "TOP-LEVEL:scanf" R76 "TOP-LEVEL:sscanf" R76 "TOP-LEVEL:__isoc99_fscanf" R76 "TOP-LEVEL:__isoc99_scanf" R76 "TOP-LEVEL:__isoc99_sscanf" R76 "TOP-LEVEL:vfscanf" R76 "TOP-LEVEL:vscanf" R76 "TOP-LEVEL:vsscanf" R76 "TOP-LEVEL:__isoc99_vfscanf" R76 "TOP-LEVEL:__isoc99_vscanf" R76 "TOP-LEVEL:__isoc99_vsscanf" R76 "TOP-LEVEL:fgetc" R76 "TOP-LEVEL:getc" R76 "TOP-LEVEL:getchar" R76 "TOP-LEVEL:fputc" R76 "TOP-LEVEL:putc" R76 "TOP-LEVEL:putchar" R76 "TOP-LEVEL:fgets" R76 "TOP-LEVEL:gets" R76 "TOP-LEVEL:fputs" R76 "TOP-LEVEL:puts" R76 "TOP-LEVEL:ungetc" R76 "TOP-LEVEL:fread" R76 "TOP-LEVEL:fwrite" R76 "TOP-LEVEL:fseek" R76 "TOP-LEVEL:ftell" R76 "TOP-LEVEL:rewind" R76 "TOP-LEVEL:fgetpos" R76 "TOP-LEVEL:fsetpos" R76 "TOP-LEVEL:clearerr" R76 "TOP-LEVEL:feof" R76 "TOP-LEVEL:ferror" R76 "TOP-LEVEL:perror" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$wchar_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$div_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_6" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$ldiv_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_7" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$lldiv_t" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:#_PIPS_STRUCT_8" R76 "TOP-LEVEL:__ctype_get_mb_cur_max" R76 "TOP-LEVEL:atof" R76 "TOP-LEVEL:atoi" R76 "TOP-LEVEL:atol" R76 "TOP-LEVEL:atoll" R76 "TOP-LEVEL:strtod" R76 "TOP-LEVEL:strtof" R76 "TOP-LEVEL:strtold" R76 "TOP-LEVEL:strtol" R76 "TOP-LEVEL:strtoul" R76 "TOP-LEVEL:strtoll" R76 "TOP-LEVEL:strtoull" R76 "TOP-LEVEL:rand" R76 "TOP-LEVEL:srand" R76 "TOP-LEVEL:malloc" R76 "TOP-LEVEL:calloc" R76 "TOP-LEVEL:realloc" R76 "TOP-LEVEL:free" R76 "TOP-LEVEL:abort" R76 "TOP-LEVEL:atexit" R76 "TOP-LEVEL:exit" R76 "TOP-LEVEL:_Exit" R76 "TOP-LEVEL:getenv" R76 "TOP-LEVEL:system" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__compar_fn_t" R76 "TOP-LEVEL:bsearch" R76 "TOP-LEVEL:qsort" R76 "TOP-LEVEL:abs" R76 "TOP-LEVEL:labs" R76 "TOP-LEVEL:llabs" R76 "TOP-LEVEL:div" R76 "TOP-LEVEL:ldiv" R76 "TOP-LEVEL:lldiv" R76 "TOP-LEVEL:mblen" R76 "TOP-LEVEL:mbtowc" R76 "TOP-LEVEL:wctomb" R76 "TOP-LEVEL:mbstowcs" R76 "TOP-LEVEL:wcstombs" R76 "TOP-LEVEL:__cs_active_thread" R76 "TOP-LEVEL:__cs_pc" R76 "TOP-LEVEL:__cs_pc_cs" R76 "TOP-LEVEL:__cs_thread_index" R76 "TOP-LEVEL:__cs_thread_lines" R76 "TOP-LEVEL:__cs_safe_malloc" R76 "TOP-LEVEL:__cs_init_scalar" R76 "TOP-LEVEL:__CSEQ_message" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_t" R76 "TOP-LEVEL:__cs_threadargs" R76 "TOP-LEVEL:__cs_create" R76 "TOP-LEVEL:__cs_join" R76 "TOP-LEVEL:__cs_exit" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_mutex_t" R76 "TOP-LEVEL:__cs_mutex_init" R76 "TOP-LEVEL:__cs_mutex_destroy" R76 "TOP-LEVEL:__cs_mutex_lock" R76 "TOP-LEVEL:__cs_mutex_unlock" R76 "28_buggy_simple_loop1_vf_false-unreach-call_seq!:$__cs_cond_t" R76 "TOP-LEVEL:__cs_cond_init" R76 "TOP-LEVEL:__cs_cond_wait_1" R76 "TOP-LEVEL:__cs_cond_wait_2" R76 "TOP-LEVEL:__cs_cond_signal" R76 "TOP-LEVEL:__VERIFIER_error" R76 "TOP-LEVEL:thr1_0" R76 "TOP-LEVEL:thr1_1" R76 "TOP-LEVEL:main_thread" R76 "TOP-LEVEL:main" )_T46 ())T74 0 U))