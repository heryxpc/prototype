# PIPS script adopted by DepthK
# Usage way:
#            $ source MYPIPS/pipsrc.sh
#            $ tpips scritp.pips

# ---- prettyprinter settings  
 
setproperty PRETTYPRINT_ALL_DECLARATIONS TRUE
# setproperty PRETTYPRINT_ALL_CONTINUE_STATEMENTS TRUE
# setproperty PRETTYPRINT_ALL_LABELS TRUE
setproperty PRETTYPRINT_C_CODE TRUE
setproperty PRETTYPRINT_ALL_C_BRACES TRUE
setproperty PRETTYPRINT_GCC_C_BRACES TRUE
setproperty PRETTYPRINT_ANALYSES_WITH_LF FALSE

# ---- Generates missing files  and routines 

setproperty PREPROCESSOR_MISSING_FILE_HANDLING "generate"

# Stop as soon as the first user error occurs  
 
setproperty ABORT_ON_USER_ERROR TRUE

# Use type information to generate invariants
# setproperty SEMANTICS_USE_TYPE_INFORMATION TRUE

# Unroll properties 2 times
# set FLAG_LOOPS_DO_LOOPS_ONLY FALSE
# set LOOP_UNROLL_MERGE TRUE
# set LOOP_LABEL "l400"
# set UNROLL_RATE 2

# According to Affine invariants paper, this produce invariants as well
# Check documentation on http://www.cri.ensmp.fr/pips/pipsmake-rc.htdoc/#x1-1410006.9.4.8
# setproperty SEMANTICS_FIX_POINT_OPERATOR "derivative"
# setproperty SEMANTICS_USE_TRANSFORMER_LISTS TRUE

# ---- Set the file name here

delete 28_buggy_simple_loop1_vf_false-unreach-call
create 28_buggy_simple_loop1_vf_false-unreach-call \
    28_buggy_simple_loop1_vf_false-unreach-call.c

# just to insure that all routines are generated.  
 
make CALLGRAPH_FILE[%ALL]

# ---- eliminate dead code 

#apply SUPPRESS_DEAD_CODE[%ALL]

# ---- ask interprocedural information  
 
activate TRANSFORMERS_INTER_FULL
activate PRECONDITIONS_INTER_FULL 

capply PARTIAL_EVAL[%ALL]


#Loop unrolling apply
#capply LOOP_TILING[%%ALL]
#capply FULL_UNROLL[%%ALL]
#capply PARTIAL_EVAL[%%ALL]
#capply SCALARIZATION[%%ALL]
#capply PRINT_LOOPS[%%ALL]

#apply REFINE_TRANSFORMERS
#activate PRINT_CODE_TRANSFORMERS
activate PRINT_CODE_PRECONDITIONS


# 3.4 Regeneration of User Source Files
# The unsplit 3.4 phase regenerates user files from available printed_file. 
# The various modules that where initially stored in single file are appended
# together in a file with the same name. Rebuild the source files after
# one or several transformations. The files are placed in the ex1.database/Src
# directory

apply UNSPLIT[%ALL]


display PRINTED_FILE[%%ALLFUNC]

close
quit
